---
- hosts: localhost
  connection: local
  become: yes
  gather_facts: yes
  vars_files:
    - "vars/main.yml"
    - "vars/{{ ansible_os_family }}.yml"

  tasks:
    - name: Install dependencies
      package:
        state: latest
        name:
          - lvm2
          - rsync
          - parted

    - name: Ensure partition 1 is gone
      parted:
        device: "{{ new_disk }}"
        number: 1
        state: absent
    #   when: packer_run

    - name: Ensure partition 2 is gone
      parted:
        device: "{{ new_disk }}"
        number: 2
        state: absent

    - name: Create a new boot partition
      parted:
        device: "{{ new_disk }}"
        number: 1
        flags: [ boot ]
        state: present
        part_type: primary
        part_end: "{{ boot_size }}MB"

    - name: Create a new root partition
      parted:
        device: "{{ new_disk }}"
        number: 2
        flags: [ lvm ]
        state: present
        part_type: primary
        part_start: "{{ boot_size|int + 1 }}MB"
        part_end: 100%

    - name: Create {{ vg_name }} volume group on top of {{ new_disk }}{{ root_part }}
      lvg:
        vg: "{{ vg_name }}"
        pvs: "{{ new_disk }}{{ root_part }}"
        pesize: "4" # 32 or 128K

    - name: Create logical volume swap of {{ swap_size }}
      lvol:
        vg: "{{ vg_name }}"
        lv: swap
        size: "{{ swap_size }}"
      when: create_swap

    - name: Create logical volume var of {{ var_size }}
      lvol:
        vg: "{{ vg_name }}"
        lv: var
        size: "{{ var_size }}"

    - name: Create logical volume log of {{ log_size }}
      lvol:
        vg: "{{ vg_name }}"
        lv: log
        size: "{{ log_size }}"

    - name: Create logical volume audit of {{ audit_size }}
      lvol:
        vg: "{{ vg_name }}"
        lv: audit
        size: "{{ audit_size }}"

    - name: Create logical volume home of {{ home_size }}
      lvol:
        vg: "{{ vg_name }}"
        lv: home
        size: "{{ home_size }}"

    - name: Create logical volume tmp of {{ tmp_size }}
      lvol:
        vg: "{{ vg_name }}"
        lv: tmp
        size: "{{ tmp_size }}"

    - name: Create logical volume root of {{ root_size }}
      lvol:
        vg: "{{ vg_name }}"
        lv: root
        size: "{{ root_size }}"

    # - name: Create {{ boot_fs }} filesystem on {{ new_disk }}{{ boot_part }}
    #   filesystem:
    #     fstype: "{{ boot_fs }}"
    #     dev: "{{ new_disk }}{{ boot_part }}"
    #     #force: yes

    - name: Create {{ boot_fs }} filesystem on {{ new_disk }}{{ boot_part }}
      command: "mkfs.{{ boot_fs }} {{ new_disk }}{{ boot_part }}"
      args:
        warn: no

    # - name: Create swap filesystem on /dev/mapper/{{ vg_name }}-swap
    #   filesystem:
    #     fstype: swap
    #     dev: "/dev/mapper/{{ vg_name }}-swap"
    #     #force: yes
    #   when: create_swap

    - name: Create swap filesystem on /dev/mapper/{{ vg_name }}-swap
      command: mkswap /dev/mapper/{{ vg_name }}-swap
      args:
        warn: no
      when: create_swap

    - name: Create {{ root_fs }} filesystem on /dev/mapper/{{ vg_name }}-var
      filesystem:
        fstype: "{{ root_fs }}"
        dev: "/dev/mapper/{{ vg_name }}-var"
        #force: yes

    - name: Create {{ root_fs }} filesystem on /dev/mapper/{{ vg_name }}-log
      filesystem:
        fstype: "{{ root_fs }}"
        dev: "/dev/mapper/{{ vg_name }}-log"
        #force: yes

    - name: Create {{ root_fs }} filesystem on /dev/mapper/{{ vg_name }}-audit
      filesystem:
        fstype: "{{ root_fs }}"
        dev: "/dev/mapper/{{ vg_name }}-audit"
        #force: yes

    - name: Create {{ root_fs }} filesystem on /dev/mapper/{{ vg_name }}-home
      filesystem:
        fstype: "{{ root_fs }}"
        dev: "/dev/mapper/{{ vg_name }}-home"
        #force: yes

    - name: Create {{ root_fs }} filesystem on /dev/mapper/{{ vg_name }}-tmp
      filesystem:
        fstype: "{{ root_fs }}"
        dev: "/dev/mapper/{{ vg_name }}-tmp"
        #force: yes

    - name: Create {{ root_fs }} filesystem on /dev/mapper/{{ vg_name }}-root
      filesystem:
        fstype: "{{ root_fs }}"
        dev: "/dev/mapper/{{ vg_name }}-root"
        #force: yes

    - name: Create newroot dir
      file:
        path: /newroot
        state: directory
        mode: 0755

    # - name: Remove any temp fstab files
    #   file:
    #     path: "{{ item }}"
    #     state: absent
    #   with_items:
    #     - '/etc/fstab.fake'
    #     - '/etc/fstab.new'

    # - name: Mount newroot dir
    #   mount:
    #     path: /newroot
    #     src: "/dev/mapper/{{ vg_name }}-root"
    #     fstype: "{{ root_fs }}"
    #     fstab: /etc/fstab.new
    #     state: mounted

    - name: Mount newroot dir
      command: "mount -t {{ root_fs }} /dev/mapper/{{ vg_name }}-root /newroot"
      args:
        warn: no

    - name: Create boot dir
      file:
        path: /newroot/boot
        state: directory
        mode: 0755

    - name: Mount boot dir
      command: "mount -t {{ boot_fs }} {{ new_disk }}{{ boot_part }} /newroot/boot"
      args:
        warn: no

    - name: Create var dir
      file:
        path: /newroot/var
        state: directory
        mode: 0755

    - name: Mount var dir
      command: "mount -t {{ root_fs }} /dev/mapper/{{ vg_name }}-var /newroot/var"
      args:
        warn: no

    - name: Create log dir
      file:
        path: /newroot/var/log
        state: directory
        mode: 0755

    - name: Mount log dir
      command: "mount -t {{ root_fs }} /dev/mapper/{{ vg_name }}-log /newroot/var/log"
      args:
        warn: no

    - name: Create audit dir
      file:
        path: /newroot/var/log/audit
        state: directory
        mode: 0755

    - name: Mount audit dir
      command: "mount -t {{ root_fs }} /dev/mapper/{{ vg_name }}-audit /newroot/var/log/audit"
      args:
        warn: no

    - name: Create home dir
      file:
        path: /newroot/home
        state: directory
        mode: 0755

    - name: Mount home dir
      command: "mount -t {{ root_fs }} /dev/mapper/{{ vg_name }}-home /newroot/home"
      args:
        warn: no

    - name: Create tmp dir
      file:
        path: /newroot/tmp
        state: directory
        mode: 0755

    - name: Mount tmp dir
      command: "mount -t {{ root_fs }} /dev/mapper/{{ vg_name }}-tmp /newroot/tmp"
      args:
        warn: no      
